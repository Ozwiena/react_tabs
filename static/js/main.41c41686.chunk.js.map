{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","id","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","className","map","isSelected","classNames","onClick","href","title","content","App","useState","setSelectedTabId","findTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAO,SAACC,GACnB,IAIyBC,EAHvBC,EACEF,EADFE,KAAMC,EACJH,EADIG,cAAeC,EACnBJ,EADmBI,cAOjBC,GAJmBJ,EAIWE,EAH3BD,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAOA,MAGiBC,EAAK,IAE3D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAACF,GACT,IAAMG,EAAaL,EAAYJ,KAAOM,EAAIN,GAE1C,OACE,oBACE,UAAQ,MAERO,UAAWG,IAAW,CACpB,YAAaD,IAJjB,SAOE,mBACEE,QAAS,kBAAML,EAAIN,KAAOE,GAAiBC,EAAcG,IACzDM,KAAI,WAAMN,EAAIN,IACd,UAAQ,UAHV,SAKGM,EAAIO,SAVFP,EAAIN,WAoBnB,qBAAKO,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAYU,cC5CRb,EAAc,CACzB,CAAED,GAAI,QAASa,MAAO,QAASC,QAAS,eACxC,CAAEd,GAAI,QAASa,MAAO,QAASC,QAAS,eACxC,CAAEd,GAAI,QAASa,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGD,IAA3D,mBAAOE,EAAP,KAAsBe,EAAtB,KAUA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCANc,kCAChBN,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIN,KAAOE,YADZ,aAChB,EAA4CW,MAMpBK,MAGtB,cAAC,EAAD,CACEjB,KAAMA,EACNC,cAAeA,EACfC,cAjBgB,WAAyB,IAAxBG,EAAuB,uDAAZL,EAAK,GACrCgB,EAAiBX,EAAIN,WCnBzBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.41c41686.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ninterface TabsProps {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs = (props: TabsProps) => {\n  const {\n    tabs, selectedTabId, onTabSelected,\n  } = props;\n\n  const findSelectedTab = (id: string) => {\n    return tabs.find(tab => tab.id === id);\n  };\n\n  const selectedTab = findSelectedTab(selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const isSelected = selectedTab.id === tab.id;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={tab.id}\n                className={classNames({\n                  'is-active': isSelected,\n                })}\n              >\n                <a\n                  onClick={() => tab.id !== selectedTabId && onTabSelected(tab)}\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {tab.title}\n\n                </a>\n              </li>\n            );\n          })}\n\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab = tabs[0]) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const findTitle = () => (\n    tabs.find(tab => tab.id === selectedTabId)?.title\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${findTitle()}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}